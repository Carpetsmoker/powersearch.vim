*search-highlight.txt* Add better highlighting when searching, as well as some
other search-related enhancements.

==============================================================================
INTRODUCTION                                                *search-highlight*

search-highlight add better highlighting when searching, as well as some other
search-related enhancements. I did not write all of it; it was compiled from
various sources, expanded, and modified to work together.

Features are:

- Highlight or blink the current match when using |n| or |N|.
- Jump to the next match without leaving incremental search.
- Don't jump immediately to the next match when using |star| or |hash|.
- Always make |n| go to the next match (even if search was started with |?| or
  |hash|).
- Better errors/feedback when 'wrapscan' is disabled.

==============================================================================
OPTIONS                                             *search-highlight-options*

*g:search_highlight*                   (String, default: 'CurrentSearch')
    Highlight group to use for the current search match. Use an empty string
    or 0 to disable this feature.

*g:search_highlight_blink*             (List, default: 0)

    Blink the current search match with this "pattern". The value is expected
    to be a list with 2 entries; the first one is a string with the name of
    the highlight group to apply, the second one is a number with the time to
    apply it for (in ms).

    A simple example which adds the ErrorMsg group for 100ms:
>
        let g:search_highlight_blink = [['ErrorMsg', 100]]
<
    You can also use more advanced patterns. For example to make it blink
    twice you could use:
>
        let g:search_highlight_blink = [['ErrorMsg', 75], ['Normal', 75], ['ErrorMsg', 75]]
<
    Use an empty string or 0 to disable this feature.

*g:search_highlight_dont_move_star*    (Boolean, default: 1)
    Don't move the cursor to the next match when using |star| or |hash|, but
    stay on the current word. This is useful if you only want to highlight all
    the matches, rather than search for them.

*g:search_highlight_consistent_n*      (Boolean, default: 1)
    |n| will always search for the next match, and |N| will always search for
    the previous match; even if we use |?| or |hash|.

*g:search_highlight_no_match_error*    (Boolean, default: 1)
    Show "|E486|: Pattern not found" when 'wrapscan' is off and the match
    isn't found in the document (rather than always showing |E384| and
    |E385|: "search hit BOTTOM without match").


==============================================================================
MAPPINGS                                           *search-highlight-mappings*

search-highlight overwrites the following normal mode mappings: |n|, |N|,
|star|, |hash|, |<C-l>|; and the following cmdline mappings: |<CR>|, |<Tab>|,
|<Shift-Tab>|

==============================================================================
FUNCTIONS                                         *search-highlight-functions*

*search_highlight#highlight()*
    Apply highlighting.

*search_highlight#start_search()*
    Start searching.

*search_highlight#next()* *search_highlight#prev()*
    Search for the next or previous match; this is like |n| and |N|.

*search_highlight#star()* *search_highlight#hash()*
    Like |star| and |hash| but it won't move the cursor.

*search_highlight#jump()*
    Jump to the next match while keeping the |cmdline| active.

*search_highlight#better_error()*



vim:tw=78:ts=8:ft=help:norl:expandtab
